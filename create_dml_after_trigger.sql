CREATE TABLE AuditBudget (end
    ProjectNumber int NULL,
    UserName varchar(16) NULL,
    Date DATETIME NULL,
    BudgetOld int NULL,
    BudgetNew int NULL
);
go

create trigger dbo.trigger_ModifyBudget -- создание триггера через конструкцию create trigger. Указываем наименование тригера и схему, в которой будет храниться тригер
on Project after update /* указываем, в отношении какой таблицы будет создан триггер. Также указываем тип триггера: в данном случае используется тип after. Данный тип тригера выполняется после действия,
запускающего триггер. Указыаем действие, запскующее триггер. Это может быть DML действие. В данном случае выбрано действие - UPDATE */
as if update (budget) /* начинаем формировать тело (инструкцию) тригера, которая сработает, если триггер будет запущен. В данном случае указано, что инструкция триггера будет запущена, если будет
обнолвено любое значение столбца budget таблицы Project, которую указали в предложении ON*/
begin -- начало формирование тела / инструкции триггера
	declare @budgetOld int
	declare @budgetNew int
	declare @projectNumber int

	select @budgetOld = (select budget from deleted) /* ранее была создана переменная @budgetOld. Мы присваиваем ей значение столбца budget, которое было заменено (предыдущее значение)
	во время выполнения update. Поскольку значение было заменено (старое значение), то оно сохраняется в виртуальной таблице deleted*/
	select @budgetNew = (select budget from inserted) /* ранее была создана переменная @budgetNew. Мы присваиваем ей значение столбца budget, которое было заменено (новое значение)
	во время выполнения update. Поскольку значение было заменено (новое значение), то оно сохраняется в виртуальной таблице inserted*/
	select @projectNumber = (select budget from deleted) /* ранее была создана переменная @budgetOld. Мы присваиваем ей значение столбца budget, которое было заменено (предыдущее значение)
	во время выполнения update. Поскольку значение было заменено (старое значение), то оно сохраняется в виртуальной таблице deleted*/
	
	insert into AuditBudget /* ранее мы создали таблицу AuditBudget. Она будет нашим журналом логов. В эту таблицу будут вставлены значения, в том числе переменные, которым раннее были присвоены
	значения из таблиц deleted и inserted. Помимо этого, в список вставляемых значений входит текущая дата изменения и имя пользователя, совершившего изменение */
	values
	(@projectNumber,user_name(),getdate(),@budgetOld, @budgetNew)
end
;